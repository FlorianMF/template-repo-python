# Copyright AUTHOR_NAME.
#
# Licensed under the LICENSE (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at LICENSE_URL
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[pycodestyle]
convention = pep257
# D104, D107: Ignore missing docstrings in __init__ files and methods.
# D202: Ignore a blank line after docstring (collision with Python Black in decorators)
add-ignore = D104,D107,D202
exclude = .eggs,*.egg,build,.git,versioneer.py,*/conf.py
ignore = E402, E721
max_line_length = 79

[flake8]
# TODO: this should be 88 or 100 according PEP8
max-line-length = 79
exclude = .tox,*.egg,build,temp
select = E,W,F
doctests = True
verbose = 2
# https://pep8.readthedocs.io/en/latest/intro.html#error-codes
format = pylint
# see: https://www.flake8rules.com/
ignore =
    E731  # Do not assign a lambda expression, use a def
    W504  # Line break occurred after a binary operator
    F401  # Module imported but unused
    F841  # Local variable name is assigned to but never used
    W605  # Invalid escape sequence 'x'
    E203  # whitespace before ':'. Opposite convention enforced by black
    E231  # missing whitespace after ',', ';', or ':'; for black
    # E501  # line too long. Handled by black, we have longer lines
    W503  # line break before binary operator, need for black

[versioneer]
VCS = git
style = pep440
versionfile_source = REPONAME/_version.py
versionfile_build = REPONAME/_version.py
tag_prefix = v
parentdir_prefix =

[coverage:report]
exclude_lines =
    pragma: no-cover
    warnings
    pass
    rank_zero_warn
    if __name__ == .__main__.:

[check-manifest]
ignore =
    *.yml
    .github
    .github/*
    .circleci
    .circleci/*

[bdist_wheel]
universal = true

[metadata]
license_file = LICENSE
description-file = README.md
# long_description = file:README.md
# long_description_content_type = text/markdown
